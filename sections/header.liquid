{% assign main_menu = linklists[section.settings.menu] %}

<div class="header-wrapper" data-section-id="{{ section.id }}" data-section-type="header">
  <header class="site-header {% if section.settings.sticky_header %}header-sticky{% endif %}">
    <div class="header-main">
      <div class="page-width">
        <div class="header-grid">
          <!-- Mobile Menu Toggle -->
          <div class="header-mobile-toggle">
            <button type="button" 
                    class="mobile-nav-toggle"
                    aria-label="Menu"
                    data-mobile-toggle>
              <span class="mobile-nav-toggle__icon"></span>
            </button>
          </div>

          <!-- Logo -->
          <div class="header-logo">
            {%- if section.settings.logo != blank -%}
              <a href="/" class="header-logo__link">
                {%- assign logo_alt = section.settings.logo.alt | default: shop.name | escape -%}
                <img src="{{ section.settings.logo | img_url: 'master' }}"
                     srcset="{{ section.settings.logo | img_url: '180x' }} 180w,
                             {{ section.settings.logo | img_url: '360x' }} 360w"
                     sizes="(max-width: 360px) 180px, 360px"
                     alt="{{ logo_alt }}"
                     loading="eager"
                     width="{{ section.settings.logo_width }}"
                     height="auto"
                     class="header-logo__image">
              </a>
            {%- else -%}
              <a href="/" class="header-logo__text h4">{{ shop.name }}</a>
            {%- endif -%}
          </div>

          <!-- Navigation -->
          <nav class="header-nav" role="navigation">
            <ul class="main-menu list-unstyled">
              {%- for link in main_menu.links -%}
                {%- if link.links != blank -%}
                  <li class="main-menu__item has-dropdown">
                    <button type="button" 
                            class="main-menu__link"
                            aria-expanded="false"
                            aria-controls="Dropdown-{{ link.handle }}">
                      {{ link.title }}
                      {% render 'icon-chevron-down' %}
                    </button>
                    <div class="dropdown" id="Dropdown-{{ link.handle }}">
                      <ul class="dropdown__list">
                        {%- for childlink in link.links -%}
                          <li class="dropdown__item">
                            <a href="{{ childlink.url }}" class="dropdown__link">
                              {{ childlink.title }}
                            </a>
                          </li>
                        {%- endfor -%}
                      </ul>
                    </div>
                  </li>
                {%- else -%}
                  <li class="main-menu__item">
                    <a href="{{ link.url }}" class="main-menu__link">
                      {{ link.title }}
                    </a>
                  </li>
                {%- endif -%}
              {%- endfor -%}
            </ul>
          </nav>

          <!-- Header Actions -->
          <div class="header-actions">
            <!-- Search -->
            <div class="header-search">
              <button type="button"
                      class="header-search__toggle"
                      aria-label="{{ 'general.search.title' | t }}"
                      data-search-toggle>
                {% render 'icon-search' %}
              </button>
            </div>

            <!-- Account -->
            <div class="header-account">
              <a href="{{ routes.account_url }}"
                 class="header-account__link"
                 aria-label="{{ 'customer.account_fallback' | t }}">
                {% render 'icon-account' %}
              </a>
            </div>

            <!-- Cart -->
            <div class="header-cart">
              <button type="button"
                      class="header-cart__toggle"
                      aria-label="{{ 'cart.general.title' | t }}"
                      data-cart-toggle>
                {% render 'icon-cart' %}
                <span class="header-cart__count" data-cart-count>
                  {{ cart.item_count }}
                </span>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </header>

  <!-- Mobile Menu Drawer -->
  <div class="mobile-menu" data-mobile-menu>
    <div class="mobile-menu__inner">
      <button type="button" 
              class="mobile-menu__close"
              aria-label="Close menu"
              data-mobile-close>
        {% render 'icon-close' %}
      </button>
      
      <nav class="mobile-nav">
        <ul class="mobile-nav__list">
          {%- for link in main_menu.links -%}
            {%- if link.links != blank -%}
              <li class="mobile-nav__item">
                <button type="button" 
                        class="mobile-nav__link mobile-nav__link--has-sublist"
                        aria-expanded="false"
                        data-submenu-toggle>
                  {{ link.title }}
                  {% render 'icon-chevron-right' %}
                </button>
                <div class="mobile-nav__sublist">
                  <button type="button" 
                          class="mobile-nav__back"
                          data-submenu-back>
                    {% render 'icon-chevron-left' %}
                    {{ 'general.navigation.back' | t }}
                  </button>
                  <ul>
                    {%- for childlink in link.links -%}
                      <li>
                        <a href="{{ childlink.url }}" class="mobile-nav__link">
                          {{ childlink.title }}
                        </a>
                      </li>
                    {%- endfor -%}
                  </ul>
                </div>
              </li>
            {%- else -%}
              <li class="mobile-nav__item">
                <a href="{{ link.url }}" class="mobile-nav__link">
                  {{ link.title }}
                </a>
              </li>
            {%- endif -%}
          {%- endfor -%}
        </ul>
      </nav>
    </div>
  </div>

  <!-- Search Drawer -->
  {% render 'search-drawer' %}

  <!-- Cart Drawer -->
  {% render 'cart-drawer' %}
</div>

{% schema %}
{
  "name": "Header",
  "settings": [
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo"
    },
    {
      "type": "range",
      "id": "logo_width",
      "min": 50,
      "max": 300,
      "step": 10,
      "unit": "px",
      "label": "Logo width",
      "default": 140
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "Menu",
      "default": "main-menu"
    },
    {
      "type": "checkbox",
      "id": "sticky_header",
      "label": "Sticky header",
      "default": true
    },
    {
      "type": "header",
      "content": "Color scheme"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "label": "Color scheme",
      "options": [
        {
          "value": "light",
          "label": "Light"
        },
        {
          "value": "dark",
          "label": "Dark"
        }
      ],
      "default": "light"
    }
  ]
}
{% endschema %}

{% stylesheet %}
.header-wrapper {
  position: relative;
  z-index: 5;
  background: var(--color-background);
}

.site-header {
  padding: 15px 0;
  border-bottom: 1px solid rgba(var(--color-border), 0.1);
}

.header-sticky {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  transform: translateY(-100%);
  transition: transform 0.3s ease-in-out;
}

.header-sticky.is-visible {
  transform: translateY(0);
}

.header-grid {
  display: grid;
  grid-template-columns: auto 1fr auto;
  align-items: center;
  gap: 20px;
}

/* Logo */
.header-logo {
  display: flex;
  align-items: center;
}

.header-logo__image {
  display: block;
  max-width: 100%;
  height: auto;
}

/* Navigation */
.main-menu {
  display: flex;
  gap: 30px;
  margin: 0;
  padding: 0;
  list-style: none;
}

.main-menu__link {
  display: flex;
  align-items: center;
  gap: 5px;
  padding: 5px 0;
  color: var(--color-text);
  text-decoration: none;
  transition: color 0.2s ease;
}

.main-menu__link:hover {
  color: var(--color-accent-1);
}

/* Dropdown */
.has-dropdown {
  position: relative;
}

.dropdown {
  position: absolute;
  top: 100%;
  left: 0;
  min-width: 200px;
  padding: 15px 0;
  background: var(--color-background);
  border: 1px solid rgba(var(--color-border), 0.1);
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  opacity: 0;
  visibility: hidden;
  transform: translateY(10px);
  transition: all 0.3s ease;
}

.has-dropdown:hover .dropdown {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

.dropdown__list {
  margin: 0;
  padding: 0;
  list-style: none;
}

.dropdown__link {
  display: block;
  padding: 8px 20px;
  color: var(--color-text);
  text-decoration: none;
  transition: color 0.2s ease;
}

.dropdown__link:hover {
  color: var(--color-accent-1);
}

/* Header Actions */
.header-actions {
  display: flex;
  align-items: center;
  gap: 20px;
}

.header-actions button {
  padding: 0;
  background: none;
  border: none;
  cursor: pointer;
  color: var(--color-text);
}

.header-cart {
  position: relative;
}

.header-cart__count {
  position: absolute;
  top: -8px;
  right: -8px;
  min-width: 18px;
  height: 18px;
  padding: 0 5px;
  border-radius: 9px;
  background: var(--color-accent-1);
  color: #fff;
  font-size: 11px;
  line-height: 18px;
  text-align: center;
}

/* Mobile Menu */
.mobile-nav-toggle {
  display: none;
}

@media screen and (max-width: 989px) {
  .header-nav {
    display: none;
  }

  .mobile-nav-toggle {
    display: block;
  }

  .header-grid {
    grid-template-columns: 1fr auto 1fr;
  }

  .header-logo {
    justify-content: center;
  }

  .header-actions {
    justify-content: flex-end;
  }
}
{% endstylesheet %}

{% javascript %}
class Header {
  constructor() {
    this.header = document.querySelector('.site-header');
    this.mobileToggle = document.querySelector('[data-mobile-toggle]');
    this.mobileMenu = document.querySelector('[data-mobile-menu]');
    this.mobileClose = document.querySelector('[data-mobile-close]');
    this.searchToggle = document.querySelector('[data-search-toggle]');
    this.cartToggle = document.querySelector('[data-cart-toggle]');
    
    this.bindEvents();
    this.handleStickyHeader();
  }

  bindEvents() {
    // Mobile menu
    this.mobileToggle?.addEventListener('click', () => this.toggleMobileMenu());
    this.mobileClose?.addEventListener('click', () => this.toggleMobileMenu());

    // Submenu toggles
    document.querySelectorAll('[data-submenu-toggle]').forEach(toggle => {
      toggle.addEventListener('click', (e) => this.toggleSubmenu(e));
    });

    // Back buttons
    document.querySelectorAll('[data-submenu-back]').forEach(back => {
      back.addEventListener('click', (e) => this.closeSubmenu(e));
    });
  }

  toggleMobileMenu() {
    this.mobileMenu.classList.toggle('is-active');
    document.documentElement.classList.toggle('overflow-hidden');
  }

  toggleSubmenu(event) {
    const button = event.currentTarget;
    const submenu = button.nextElementSibling;
    
    button.setAttribute('aria-expanded', 
      button.getAttribute('aria-expanded') === 'false' ? 'true' : 'false'
    );
    submenu.classList.toggle('is-active');
  }

  closeSubmenu(event) {
    const submenu = event.currentTarget.closest('.mobile-nav__sublist');
    const button = submenu.previousElementSibling;
    
    button.setAttribute('aria-expanded', 'false');
    submenu.classList.remove('is-active');
  }

  handleStickyHeader() {
    if (!this.header.classList.contains('header-sticky')) return;

    let lastScroll = 0;
    
    window.addEventListener('scroll', () => {
      const currentScroll = window.pageYOffset;
      
      if (currentScroll <= 0) {
        this.header.classList.remove('is-visible');
        return;
      }
      
      if (currentScroll > lastScroll && !this.header.classList.contains('is-visible')) {
        // Scrolling down & header is not visible
        this.header.classList.remove('is-visible');
      } else if (currentScroll < lastScroll && this.header.classList.contains('is-visible')) {
        // Scrolling up & header is visible
        this.header.classList.add('is-visible');
      }
      
      lastScroll = currentScroll;
    });
  }
}

// Initialize header
document.addEventListener('DOMContentLoaded', () => {
  new Header();
});
{% endjavascript %}
